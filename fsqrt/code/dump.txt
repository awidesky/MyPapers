
my_asm_output.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <_Z6fsqrt_f>:
#include <cmath>
#include <iostream>
#include <chrono>

float fsqrt_(float f) {
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	f3 0f 11 45 10       	movss  %xmm0,0x10(%rbp)

	int i = *(int *)&f;
   d:	48 8d 45 10          	lea    0x10(%rbp),%rax
  11:	8b 00                	mov    (%rax),%eax
  13:	89 45 f8             	mov    %eax,-0x8(%rbp)
	i = (i >> 1) + 0x1fbb67ae;
  16:	8b 45 f8             	mov    -0x8(%rbp),%eax
  19:	d1 f8                	sar    %eax
  1b:	05 ae 67 bb 1f       	add    $0x1fbb67ae,%eax
  20:	89 45 f8             	mov    %eax,-0x8(%rbp)
	float f1 = *(float *)&i;
  23:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  27:	f3 0f 10 00          	movss  (%rax),%xmm0
  2b:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
	return 0.5F * (f1 + f / f1);
  30:	f3 0f 10 45 10       	movss  0x10(%rbp),%xmm0
  35:	f3 0f 5e 45 fc       	divss  -0x4(%rbp),%xmm0
  3a:	0f 28 c8             	movaps %xmm0,%xmm1
  3d:	f3 0f 58 4d fc       	addss  -0x4(%rbp),%xmm1
  42:	f3 0f 10 05 28 00 00 	movss  0x28(%rip),%xmm0        # 72 <_Z7my_testv+0x1e>
  49:	00 
  4a:	f3 0f 59 c1          	mulss  %xmm1,%xmm0

}
  4e:	48 83 c4 10          	add    $0x10,%rsp
  52:	5d                   	pop    %rbp
  53:	c3                   	retq   

0000000000000054 <_Z7my_testv>:


void my_test() { 
  54:	55                   	push   %rbp
  55:	53                   	push   %rbx
  56:	48 83 ec 68          	sub    $0x68,%rsp
  5a:	48 8d ac 24 80 00 00 	lea    0x80(%rsp),%rbp
  61:	00 

	auto start = std::chrono::high_resolution_clock::now();
  62:	e8 00 00 00 00       	callq  67 <_Z7my_testv+0x13>
  67:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	float max = 0.0F;
  6b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  6f:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
	for (int i = 0x00800000 ; i < 0x7f800000 ; i++) {
  74:	c7 45 ac 00 00 80 00 	movl   $0x800000,-0x54(%rbp)
  7b:	8b 45 ac             	mov    -0x54(%rbp),%eax
  7e:	3d ff ff 7f 7f       	cmp    $0x7f7fffff,%eax
  83:	7f 40                	jg     c5 <_Z7my_testv+0x71>

		float f = *(float*) &i;
  85:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
  89:	f3 0f 10 00          	movss  (%rax),%xmm0
  8d:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
		float re = fsqrt_(f);
  92:	8b 45 d8             	mov    -0x28(%rbp),%eax
  95:	66 0f 6e c0          	movd   %eax,%xmm0
  99:	e8 62 ff ff ff       	callq  0 <_Z6fsqrt_f>
  9e:	66 0f 7e c0          	movd   %xmm0,%eax
  a2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
		if(max < re) max = re;
  a5:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
  aa:	0f 2f 45 dc          	comiss -0x24(%rbp),%xmm0
  ae:	76 0a                	jbe    ba <_Z7my_testv+0x66>
  b0:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
  b5:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
	for (int i = 0x00800000 ; i < 0x7f800000 ; i++) {
  ba:	8b 45 ac             	mov    -0x54(%rbp),%eax
  bd:	83 c0 01             	add    $0x1,%eax
  c0:	89 45 ac             	mov    %eax,-0x54(%rbp)
  c3:	eb b6                	jmp    7b <_Z7my_testv+0x27>

	}

	auto end1 = std::chrono::high_resolution_clock::now();
  c5:	e8 00 00 00 00       	callq  ca <_Z7my_testv+0x76>
  ca:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
	auto diff = end1 - start;
  ce:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  d2:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  d6:	48 89 c1             	mov    %rax,%rcx
  d9:	e8 00 00 00 00       	callq  de <_Z7my_testv+0x8a>
  de:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	std::cout << "mysqrt : " << std::chrono::duration <double, std::nano> (diff).count() << " ms" << std::endl;
  e2:	48 8d 15 01 00 00 00 	lea    0x1(%rip),%rdx        # ea <_Z7my_testv+0x96>
  e9:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # f0 <_Z7my_testv+0x9c>
  f0:	e8 00 00 00 00       	callq  f5 <_Z7my_testv+0xa1>
  f5:	48 89 c3             	mov    %rax,%rbx
  f8:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  fc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 100:	48 89 c1             	mov    %rax,%rcx
 103:	e8 00 00 00 00       	callq  108 <_Z7my_testv+0xb4>
 108:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 10c:	48 89 c1             	mov    %rax,%rcx
 10f:	e8 00 00 00 00       	callq  114 <_Z7my_testv+0xc0>
 114:	66 48 0f 7e c0       	movq   %xmm0,%rax
 119:	66 48 0f 6e c8       	movq   %rax,%xmm1
 11e:	48 89 d9             	mov    %rbx,%rcx
 121:	e8 00 00 00 00       	callq  126 <_Z7my_testv+0xd2>
 126:	48 8d 15 0b 00 00 00 	lea    0xb(%rip),%rdx        # 138 <_Z7my_testv+0xe4>
 12d:	48 89 c1             	mov    %rax,%rcx
 130:	e8 00 00 00 00       	callq  135 <_Z7my_testv+0xe1>
 135:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 13c <_Z7my_testv+0xe8>
 13c:	48 89 c1             	mov    %rax,%rcx
 13f:	e8 00 00 00 00       	callq  144 <_Z7my_testv+0xf0>
	
}
 144:	90                   	nop
 145:	48 83 c4 68          	add    $0x68,%rsp
 149:	5b                   	pop    %rbx
 14a:	5d                   	pop    %rbp
 14b:	c3                   	retq   

000000000000014c <_Z8lib_testv>:

void lib_test() {
 14c:	55                   	push   %rbp
 14d:	53                   	push   %rbx
 14e:	48 83 ec 68          	sub    $0x68,%rsp
 152:	48 8d ac 24 80 00 00 	lea    0x80(%rsp),%rbp
 159:	00 

	auto start = std::chrono::high_resolution_clock::now();	
 15a:	e8 00 00 00 00       	callq  15f <_Z8lib_testv+0x13>
 15f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	float max = 0.0F;
 163:	66 0f ef c0          	pxor   %xmm0,%xmm0
 167:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
	for (int i = 0x00800000 ; i < 0x7f800000 ; i++) {
 16c:	c7 45 ac 00 00 80 00 	movl   $0x800000,-0x54(%rbp)
 173:	8b 45 ac             	mov    -0x54(%rbp),%eax
 176:	3d ff ff 7f 7f       	cmp    $0x7f7fffff,%eax
 17b:	7f 40                	jg     1bd <_Z8lib_testv+0x71>

		float f = *(float*) &i;
 17d:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
 181:	f3 0f 10 00          	movss  (%rax),%xmm0
 185:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
		float re = sqrtf(f);
 18a:	8b 45 d8             	mov    -0x28(%rbp),%eax
 18d:	66 0f 6e c0          	movd   %eax,%xmm0
 191:	e8 00 00 00 00       	callq  196 <_Z8lib_testv+0x4a>
 196:	66 0f 7e c0          	movd   %xmm0,%eax
 19a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
		if(max < re) max = re;
 19d:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
 1a2:	0f 2f 45 dc          	comiss -0x24(%rbp),%xmm0
 1a6:	76 0a                	jbe    1b2 <_Z8lib_testv+0x66>
 1a8:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
 1ad:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
	for (int i = 0x00800000 ; i < 0x7f800000 ; i++) {
 1b2:	8b 45 ac             	mov    -0x54(%rbp),%eax
 1b5:	83 c0 01             	add    $0x1,%eax
 1b8:	89 45 ac             	mov    %eax,-0x54(%rbp)
 1bb:	eb b6                	jmp    173 <_Z8lib_testv+0x27>

	}

	auto end1 = std::chrono::high_resolution_clock::now();
 1bd:	e8 00 00 00 00       	callq  1c2 <_Z8lib_testv+0x76>
 1c2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
	auto diff = end1 - start;
 1c6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
 1ca:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 1ce:	48 89 c1             	mov    %rax,%rcx
 1d1:	e8 00 00 00 00       	callq  1d6 <_Z8lib_testv+0x8a>
 1d6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	std::cout << "stdlib : " << std::chrono::duration <double, std::nano> (diff).count() << " ms" << std::endl;
 1da:	48 8d 15 0f 00 00 00 	lea    0xf(%rip),%rdx        # 1f0 <_Z8lib_testv+0xa4>
 1e1:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 1e8 <_Z8lib_testv+0x9c>
 1e8:	e8 00 00 00 00       	callq  1ed <_Z8lib_testv+0xa1>
 1ed:	48 89 c3             	mov    %rax,%rbx
 1f0:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
 1f4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 1f8:	48 89 c1             	mov    %rax,%rcx
 1fb:	e8 00 00 00 00       	callq  200 <_Z8lib_testv+0xb4>
 200:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 204:	48 89 c1             	mov    %rax,%rcx
 207:	e8 00 00 00 00       	callq  20c <_Z8lib_testv+0xc0>
 20c:	66 48 0f 7e c0       	movq   %xmm0,%rax
 211:	66 48 0f 6e c8       	movq   %rax,%xmm1
 216:	48 89 d9             	mov    %rbx,%rcx
 219:	e8 00 00 00 00       	callq  21e <_Z8lib_testv+0xd2>
 21e:	48 8d 15 0b 00 00 00 	lea    0xb(%rip),%rdx        # 230 <_Z8lib_testv+0xe4>
 225:	48 89 c1             	mov    %rax,%rcx
 228:	e8 00 00 00 00       	callq  22d <_Z8lib_testv+0xe1>
 22d:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 234 <_Z8lib_testv+0xe8>
 234:	48 89 c1             	mov    %rax,%rcx
 237:	e8 00 00 00 00       	callq  23c <_Z8lib_testv+0xf0>
	
}
 23c:	90                   	nop
 23d:	48 83 c4 68          	add    $0x68,%rsp
 241:	5b                   	pop    %rbx
 242:	5d                   	pop    %rbp
 243:	c3                   	retq   

0000000000000244 <main>:


int main() {
 244:	55                   	push   %rbp
 245:	48 89 e5             	mov    %rsp,%rbp
 248:	48 83 ec 30          	sub    $0x30,%rsp
 24c:	e8 00 00 00 00       	callq  251 <main+0xd>
    
	std::cout << "warmup" << std::endl;
 251:	48 8d 15 19 00 00 00 	lea    0x19(%rip),%rdx        # 271 <main+0x2d>
 258:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 25f <main+0x1b>
 25f:	e8 00 00 00 00       	callq  264 <main+0x20>
 264:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 26b <main+0x27>
 26b:	48 89 c1             	mov    %rax,%rcx
 26e:	e8 00 00 00 00       	callq  273 <main+0x2f>
	for(int i = 0 ; i < 3 ; i++) {
 273:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 27a:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
 27e:	7f 10                	jg     290 <main+0x4c>

		my_test();
 280:	e8 cf fd ff ff       	callq  54 <_Z7my_testv>
		lib_test();
 285:	e8 c2 fe ff ff       	callq  14c <_Z8lib_testv>
	for(int i = 0 ; i < 3 ; i++) {
 28a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 28e:	eb ea                	jmp    27a <main+0x36>

	}


	std::cout << "\n\ntest\n" << std::endl;
 290:	48 8d 15 20 00 00 00 	lea    0x20(%rip),%rdx        # 2b7 <main+0x73>
 297:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 29e <main+0x5a>
 29e:	e8 00 00 00 00       	callq  2a3 <main+0x5f>
 2a3:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2aa <main+0x66>
 2aa:	48 89 c1             	mov    %rax,%rcx
 2ad:	e8 00 00 00 00       	callq  2b2 <main+0x6e>
	for(int i = 0 ; i < 5 ; i++) {
 2b2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 2b9:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)
 2bd:	7f 10                	jg     2cf <main+0x8b>

		my_test();
 2bf:	e8 90 fd ff ff       	callq  54 <_Z7my_testv>
		lib_test();
 2c4:	e8 83 fe ff ff       	callq  14c <_Z8lib_testv>
	for(int i = 0 ; i < 5 ; i++) {
 2c9:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 2cd:	eb ea                	jmp    2b9 <main+0x75>

	}

 2cf:	b8 00 00 00 00       	mov    $0x0,%eax
 2d4:	48 83 c4 30          	add    $0x30,%rsp
 2d8:	5d                   	pop    %rbp
 2d9:	c3                   	retq   

00000000000002da <__tcf_0>:
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
 2da:	55                   	push   %rbp
 2db:	48 89 e5             	mov    %rsp,%rbp
 2de:	48 83 ec 20          	sub    $0x20,%rsp
 2e2:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2e9 <__tcf_0+0xf>
 2e9:	e8 00 00 00 00       	callq  2ee <__tcf_0+0x14>
 2ee:	90                   	nop
 2ef:	48 83 c4 20          	add    $0x20,%rsp
 2f3:	5d                   	pop    %rbp
 2f4:	c3                   	retq   

00000000000002f5 <_Z41__static_initialization_and_destruction_0ii>:
 2f5:	55                   	push   %rbp
 2f6:	48 89 e5             	mov    %rsp,%rbp
 2f9:	48 83 ec 20          	sub    $0x20,%rsp
 2fd:	89 4d 10             	mov    %ecx,0x10(%rbp)
 300:	89 55 18             	mov    %edx,0x18(%rbp)
 303:	83 7d 10 01          	cmpl   $0x1,0x10(%rbp)
 307:	75 21                	jne    32a <_Z41__static_initialization_and_destruction_0ii+0x35>
 309:	81 7d 18 ff ff 00 00 	cmpl   $0xffff,0x18(%rbp)
 310:	75 18                	jne    32a <_Z41__static_initialization_and_destruction_0ii+0x35>
 312:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 319 <_Z41__static_initialization_and_destruction_0ii+0x24>
 319:	e8 00 00 00 00       	callq  31e <_Z41__static_initialization_and_destruction_0ii+0x29>
 31e:	48 8d 0d b5 ff ff ff 	lea    -0x4b(%rip),%rcx        # 2da <__tcf_0>
 325:	e8 00 00 00 00       	callq  32a <_Z41__static_initialization_and_destruction_0ii+0x35>
 32a:	90                   	nop
 32b:	48 83 c4 20          	add    $0x20,%rsp
 32f:	5d                   	pop    %rbp
 330:	c3                   	retq   

0000000000000331 <_GLOBAL__sub_I__Z6fsqrt_f>:
 331:	55                   	push   %rbp
 332:	48 89 e5             	mov    %rsp,%rbp
 335:	48 83 ec 20          	sub    $0x20,%rsp
 339:	ba ff ff 00 00       	mov    $0xffff,%edx
 33e:	b9 01 00 00 00       	mov    $0x1,%ecx
 343:	e8 ad ff ff ff       	callq  2f5 <_Z41__static_initialization_and_destruction_0ii>
 348:	90                   	nop
 349:	48 83 c4 20          	add    $0x20,%rsp
 34d:	5d                   	pop    %rbp
 34e:	c3                   	retq   
 34f:	90                   	nop

Disassembly of section .text$_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv:

0000000000000000 <_ZNKSt6chrono8durationIxSt5ratioILx1ELx1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
	{ return __r; }
   8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   
	  }
  11:	90                   	nop
  12:	90                   	nop
  13:	90                   	nop
  14:	90                   	nop
  15:	90                   	nop
  16:	90                   	nop
  17:	90                   	nop
  18:	90                   	nop
  19:	90                   	nop
  1a:	90                   	nop
  1b:	90                   	nop
  1c:	90                   	nop
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop

Disassembly of section .text$_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_:

0000000000000000 <_ZNSt6chrono8durationIxSt5ratioILx1ELx1000000000EEEC1IxvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   8:	48 89 55 18          	mov    %rdx,0x18(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   c:	48 8b 45 18          	mov    0x18(%rbp),%rax
  10:	48 8b 10             	mov    (%rax),%rdx
  13:	48 8b 45 10          	mov    0x10(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	retq   
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop

Disassembly of section .text$_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE:

0000000000000000 <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
	return __time_point(__lhs.time_since_epoch() -__rhs);
      }

    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   c:	48 89 55 18          	mov    %rdx,0x18(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
  10:	48 8b 45 18          	mov    0x18(%rbp),%rax
  14:	48 89 c1             	mov    %rax,%rcx
  17:	e8 00 00 00 00       	callq  1c <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE+0x1c>
  1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  20:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  24:	e8 00 00 00 00       	callq  29 <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE+0x29>
  29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  31:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  35:	48 89 c1             	mov    %rax,%rcx
  38:	e8 00 00 00 00       	callq  3d <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE+0x3d>
  3d:	90                   	nop
  3e:	48 83 c4 30          	add    $0x30,%rsp
  42:	5d                   	pop    %rbp
  43:	c3                   	retq   
  44:	90                   	nop
  45:	90                   	nop
  46:	90                   	nop
  47:	90                   	nop
  48:	90                   	nop
  49:	90                   	nop
  4a:	90                   	nop
  4b:	90                   	nop
  4c:	90                   	nop
  4d:	90                   	nop
  4e:	90                   	nop
  4f:	90                   	nop

Disassembly of section .text$_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_:

0000000000000000 <_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   0:	55                   	push   %rbp
   1:	53                   	push   %rbx
   2:	48 83 ec 48          	sub    $0x48,%rsp
   6:	48 8d ac 24 80 00 00 	lea    0x80(%rsp),%rbp
   d:	00 
   e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
  16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  1a:	48 8b 00             	mov    (%rax),%rax
  1d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  21:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  25:	48 89 c1             	mov    %rax,%rcx
  28:	e8 00 00 00 00       	callq  2d <_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x2d>
  2d:	48 89 c3             	mov    %rax,%rbx
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	48 8b 00             	mov    (%rax),%rax
  37:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  3b:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  3f:	48 89 c1             	mov    %rax,%rcx
  42:	e8 00 00 00 00       	callq  47 <_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x47>
  47:	48 29 c3             	sub    %rax,%rbx
  4a:	48 89 d8             	mov    %rbx,%rax
  4d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  51:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
  55:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  59:	48 89 c1             	mov    %rax,%rcx
  5c:	e8 00 00 00 00       	callq  61 <_ZNSt6chronomiIxSt5ratioILx1ELx1000000000EExS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_+0x61>
  61:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
      }
  65:	48 83 c4 48          	add    $0x48,%rsp
  69:	5b                   	pop    %rbx
  6a:	5d                   	pop    %rbp
  6b:	c3                   	retq   
  6c:	90                   	nop
  6d:	90                   	nop
  6e:	90                   	nop
  6f:	90                   	nop

Disassembly of section .text$_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv:

0000000000000000 <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
	{ return __d; }
   8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   c:	48 8b 00             	mov    (%rax),%rax
   f:	5d                   	pop    %rbp
  10:	c3                   	retq   
  11:	90                   	nop
  12:	90                   	nop
  13:	90                   	nop
  14:	90                   	nop
  15:	90                   	nop
  16:	90                   	nop
  17:	90                   	nop
  18:	90                   	nop
  19:	90                   	nop
  1a:	90                   	nop
  1b:	90                   	nop
  1c:	90                   	nop
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop

Disassembly of section .text$_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IxS2_vEERKNS0_IT_T0_EE:

0000000000000000 <_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IxS2_vEERKNS0_IT_T0_EE>:
	  constexpr duration(const duration<_Rep2, _Period2>& __d)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   c:	48 89 55 18          	mov    %rdx,0x18(%rbp)
	  : __r(duration_cast<duration>(__d).count()) { }
  10:	48 8b 45 18          	mov    0x18(%rbp),%rax
  14:	48 89 c1             	mov    %rax,%rcx
  17:	e8 00 00 00 00       	callq  1c <_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IxS2_vEERKNS0_IT_T0_EE+0x1c>
  1c:	66 48 0f 7e c0       	movq   %xmm0,%rax
  21:	66 48 0f 6e c0       	movq   %rax,%xmm0
  26:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  2b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  2f:	48 89 c1             	mov    %rax,%rcx
  32:	e8 00 00 00 00       	callq  37 <_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IxS2_vEERKNS0_IT_T0_EE+0x37>
  37:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  3c:	48 8b 45 10          	mov    0x10(%rbp),%rax
  40:	48 89 10             	mov    %rdx,(%rax)
  43:	90                   	nop
  44:	48 83 c4 30          	add    $0x30,%rsp
  48:	5d                   	pop    %rbp
  49:	c3                   	retq   
  4a:	90                   	nop
  4b:	90                   	nop
  4c:	90                   	nop
  4d:	90                   	nop
  4e:	90                   	nop
  4f:	90                   	nop

Disassembly of section .text$_ZNKSt6chrono8durationIdSt5ratioILx1ELx1000000000EEE5countEv:

0000000000000000 <_ZNKSt6chrono8durationIdSt5ratioILx1ELx1000000000EEE5countEv>:
	count() const
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
	{ return __r; }
   8:	48 8b 45 10          	mov    0x10(%rbp),%rax
   c:	f2 0f 10 00          	movsd  (%rax),%xmm0
  10:	66 48 0f 7e c0       	movq   %xmm0,%rax
  15:	66 48 0f 6e c0       	movq   %rax,%xmm0
  1a:	5d                   	pop    %rbp
  1b:	c3                   	retq   
  1c:	90                   	nop
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop

Disassembly of section .text$_ZNSt6chrono13duration_castINS_8durationIdSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE:

0000000000000000 <_ZNSt6chrono13duration_castINS_8durationIdSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
	return __dc::__cast(__d);
   c:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  10:	e8 00 00 00 00       	callq  15 <_ZNSt6chrono13duration_castINS_8durationIdSt5ratioILx1ELx1000000000EEEExS3_EENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE+0x15>
  15:	66 48 0f 7e c0       	movq   %xmm0,%rax
      }
  1a:	66 48 0f 6e c0       	movq   %rax,%xmm0
  1f:	48 83 c4 20          	add    $0x20,%rsp
  23:	5d                   	pop    %rbp
  24:	c3                   	retq   
  25:	90                   	nop
  26:	90                   	nop
  27:	90                   	nop
  28:	90                   	nop
  29:	90                   	nop
  2a:	90                   	nop
  2b:	90                   	nop
  2c:	90                   	nop
  2d:	90                   	nop
  2e:	90                   	nop
  2f:	90                   	nop

Disassembly of section .text$_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EEdLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE:

0000000000000000 <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EEdLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
	    return _ToDur(static_cast<__to_rep>(__d.count()));
   c:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  10:	e8 00 00 00 00       	callq  15 <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EEdLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE+0x15>
  15:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  1a:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  1f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  23:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  27:	48 89 c1             	mov    %rax,%rcx
  2a:	e8 00 00 00 00       	callq  2f <_ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILx1ELx1000000000EEEES2_ILx1ELx1EEdLb1ELb1EE6__castIxS3_EES4_RKNS1_IT_T0_EE+0x2f>
  2f:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  34:	66 48 0f 7e c0       	movq   %xmm0,%rax
	  }
  39:	66 48 0f 6e c0       	movq   %rax,%xmm0
  3e:	48 83 c4 30          	add    $0x30,%rsp
  42:	5d                   	pop    %rbp
  43:	c3                   	retq   
  44:	90                   	nop
  45:	90                   	nop
  46:	90                   	nop
  47:	90                   	nop
  48:	90                   	nop
  49:	90                   	nop
  4a:	90                   	nop
  4b:	90                   	nop
  4c:	90                   	nop
  4d:	90                   	nop
  4e:	90                   	nop
  4f:	90                   	nop

Disassembly of section .text$_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IdvEERKT_:

0000000000000000 <_ZNSt6chrono8durationIdSt5ratioILx1ELx1000000000EEEC1IdvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   8:	48 89 55 18          	mov    %rdx,0x18(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   c:	48 8b 45 18          	mov    0x18(%rbp),%rax
  10:	f2 0f 10 00          	movsd  (%rax),%xmm0
  14:	48 8b 45 10          	mov    0x10(%rbp),%rax
  18:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	retq   
  1f:	90                   	nop
